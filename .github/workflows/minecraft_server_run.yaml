name: 🛠️ Test Minecraft Server Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-minecraft-server:
    runs-on: ubuntu-latest

    steps:
      # 📂 Repository auschecken
      - name: 📂 Checkout repository
        uses: actions/checkout@v3

      # 🐳 Docker installieren
      - name: 🐳 Set up Docker
        uses: docker/setup-buildx-action@v2

      # 🐳 Docker Compose installieren
      - name: 🐳 Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 📂 Mods-Ordner vorbereiten
      - name: 📂 Prepare Mods Folder
        run: |
          mkdir -p /opt/minecraft/server/mods
          cp -r mods/* /opt/minecraft/server/mods/

      # 🚀 Docker-Compose starten
      - name: 🚀 Start Minecraft Server with Docker Compose
        run: |
          docker-compose -f docker/docker-compose.yaml up -d

      # ⏳ Warten, bis der Server vollständig gestartet ist
      - name: ⏳ Wait for Server to Start
        run: |
          echo "Waiting for server to start..."
          sleep 300  # 5 Minuten warten
          echo "✅ Finished waiting for server startup."

      # 📜 Server-Logs auf Fehler überprüfen
      - name: 📜 Check Server Logs for Errors
        run: |
          echo "Checking server logs for errors..."
          docker logs mc_gemuesefach | tee server.log
          if grep -i "\[.*\/ERROR\]" server.log; then
            echo "❌ Errors found in server logs!"
            exit 1
          else
            echo "✅ No errors found in server logs."
          fi

      # ✅ Überprüfen, ob der Server läuft
      - name: ✅ Check Server Status
        run: |
          if docker ps | grep mc_gemuesefach > /dev/null; then
            echo "✅ Server is running successfully!"
          else
            echo "❌ Server failed to start."
            exit 1
          fi

      # 🛑 Docker-Compose stoppen
      - name: 🛑 Stop Docker Compose
        if: always()
        run: |
          docker-compose -f docker/docker-compose.yaml down